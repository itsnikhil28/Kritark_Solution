import React, { useState, useEffect } from "react";
import { Head, useForm, Link } from "@inertiajs/react";
import AppLayout from "@/layouts/app-layout";
import { Card, CardHeader, CardContent, CardTitle } from "@/components/ui/card";
import { Table, TableHeader, TableBody, TableHead, TableRow, TableCell } from "@/components/ui/table";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Eye, Clock, CheckCircle, PlusCircle, ChartBar } from "lucide-react";
import { toast } from "sonner";
import SalaryTab from "../../../components/admin/SalaryTab";

export default function GenerateSalary({ salaryGenerations }) {
    const { data, setData, post, processing, reset, errors } = useForm({
        salary_month: "",
    });

    const [monthRecords, setMonthRecords] = useState(salaryGenerations ?? []);

    // Handle Generate button
    const handleGenerate = (e) => {
        e.preventDefault();
        if (!data.salary_month) {
            toast({
                title: "Error",
                description: "Please select a salary month first.",
            });
            return;
        }

        post(route("admin.salary.generate.store"), {
            onSuccess: (page) => {
                toast({ title: "Success", description: "Salary generated successfully!" });
                setMonthRecords(page.props.salaryGenerations.filter(s => s.salary_month === data.salary_month));
                reset("salary_month");
            },
            onError: () => { },
        });
    };

    return (
        <AppLayout>
            <Head title="Salary Generation" />

            <SalaryTab />

            <div className="p-6 space-y-6">
                <h1 className="text-2xl font-semibold">ðŸ’° Salary Generation</h1>

                {/* Month selector */}
                <Card>
                    <CardHeader>
                        <CardTitle>Select Salary Month</CardTitle>
                    </CardHeader>
                    <CardContent>
                        <form onSubmit={handleGenerate} className="flex flex-col sm:flex-row gap-3 items-start sm:items-end">
                            <label className="flex flex-col w-full sm:w-60">
                                <span className="mb-1 font-medium">Salary month *</span>
                                <Input
                                    type="month"
                                    value={data.salary_month}
                                    onChange={(e) => setData("salary_month", e.target.value)}
                                    required
                                />
                            </label>
                            <Button type="submit" disabled={processing} className="flex items-center gap-2 mt-2 sm:mt-0">
                                <PlusCircle className="h-4 w-4" /> Generate
                            </Button>
                        </form>

                        {errors.salary_month && <p className="text-sm text-red-500">{errors.salary_month}</p>}
                    </CardContent>
                </Card>

                {/* Month records table */}
                {monthRecords.length > 0 && (
                    <Card>
                        <CardHeader>
                            <CardTitle>ðŸ“‹ Salary Records for {data.salary_month}</CardTitle>
                        </CardHeader>
                        <CardContent className="overflow-x-auto">
                            <Table>
                                <TableHeader>
                                    <TableRow>
                                        <TableHead>Sl</TableHead>
                                        <TableHead>Salary Name</TableHead>
                                        <TableHead>Generate Date</TableHead>
                                        <TableHead>Generated By</TableHead>
                                        <TableHead>Status</TableHead>
                                        <TableHead>Approved Date</TableHead>
                                        <TableHead>Approved By</TableHead>
                                        <TableHead>Action</TableHead>
                                    </TableRow>
                                </TableHeader>
                                <TableBody>
                                    {monthRecords.map((item, index) => (
                                        <TableRow key={item.id} className="hover:bg-gray-50">
                                            <TableCell>{index + 1}</TableCell>
                                            <TableCell>{item.salary_month}</TableCell>
                                            <TableCell>{item.generate_date}</TableCell>
                                            <TableCell>{item.generate_by}</TableCell>
                                            <TableCell>
                                                {item.status === "Approved" ? (
                                                    <span className="bg-green-100 text-green-700 px-3 py-1 rounded-full text-xs flex items-center gap-1">
                                                        <CheckCircle className="h-3 w-3" /> Approved
                                                    </span>
                                                ) : (
                                                    <span className="bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-xs flex items-center gap-1">
                                                        <Clock className="h-3 w-3" /> Pending
                                                    </span>
                                                )}
                                            </TableCell>
                                            <TableCell>{item.approved_date || "â€”"}</TableCell>
                                            <TableCell>{item.approved_by || "â€”"}</TableCell>
                                            <TableCell>
                                                <div className="flex gap-2">
                                                    <Link
                                                        title="Salary Approval"
                                                        href={route("admin.salary.generate.show", { id: item.id })}
                                                        className="p-2 bg-blue-100 text-blue-600 rounded-md hover:bg-blue-200 flex items-center gap-1 text-sm"
                                                    >
                                                        <Eye className="h-4 w-4" />
                                                    </Link>

                                                    <Link
                                                        title="Employee Salary Chart"
                                                        href={route("admin.salary.employee-chart", { id: item.id })}
                                                        className="p-2 bg-blue-100 text-blue-600 rounded-md hover:bg-blue-200 flex items-center gap-1 text-sm"
                                                    >
                                                        <ChartBar className="h-4 w-4" />
                                                    </Link>
                                                </div>
                                            </TableCell>
                                        </TableRow>
                                    ))}
                                </TableBody>
                            </Table>
                        </CardContent>
                    </Card>
                )}
            </div>
        </AppLayout>
    );
}
